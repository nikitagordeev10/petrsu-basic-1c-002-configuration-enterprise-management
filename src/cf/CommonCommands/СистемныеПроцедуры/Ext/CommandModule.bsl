// Модуль приложения
Процедура ПередНачаломРаботыСистемы(Отказ)
	Сообщить("Перед Началом Работы Системы");	
КонецПроцедуры;  

Процедура ПриНачалеРаботыСистемы()
	Сообщить("При начале работы системы");
КонецПроцедуры;  

Процедура ПриЗавершенииРаботыСистемы()  
	Сообщить("При Завершении Работы Системы");
КонецПроцедуры; 

Процедура ПередЗавершениемРаботыСистемы(Отказ)
	Сообщить("Перед Завершением Работы Системы");
КонецПроцедуры;  

// Модуль объекта
Процедура ПередЗаписью(Отказ)
	Товар = Справочники.Номенклатура.НайтиПоНаименованию(Наименование);
	Если НЕ Товар.Пустая() Тогда
		Отказ = Истина;
		Сообщить("Уже существует номенклатура с таким наименованием!");
	КонецЕсли;
КонецПроцедуры;

Процедура ПриЗаписи(Отказ)    
	Товар = Справочники.Номенклатура.НайтиПоНаименованию(Наименование);
	Если НЕ Товар.Пустая() Тогда
		Отказ = Истина;
		Сообщить("Уже существует номенклатура с таким наименованием!");
	КонецЕсли;
КонецПроцедуры;

Процедура ПередУдалением(Отказ)
	Сообщить("Товар удаляется на Ваш страх и риск");
КонецПроцедуры;  


Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)   
	Если ЭтотОбъект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
		Префикс = "У-";
	ИначеЕсли ЭтотОбъект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар Тогда
		Префикс = "Т-"
	КонецЕсли;
КонецПроцедуры;


&НаСервере
Функция ПолучитьЗначениеКонстантыРасчетСтоимости()
	ДаНет = Константы.РассчитыватьСтоимостьАвтоматически.Получить();
	Возврат ДаНет;
КонецФункции;
	
	
	
	
	
	
	
	
	